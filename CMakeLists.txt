# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(imgui LANGUAGES CXX C)

# target
add_library(imgui STATIC "")
set_target_properties(imgui PROPERTIES OUTPUT_NAME "imgui")
set_target_properties(imgui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
target_include_directories(imgui PRIVATE
    vendor/imgui
)
target_include_directories(imgui INTERFACE
    vendor/imgui
)
target_include_directories(imgui PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/include
)
target_compile_definitions(imgui PRIVATE
    PLATFORM_DESKTOP
    GLFW_INCLUDE_NONE
    GL_SILENCE_DEPRECATION
)
target_compile_options(imgui PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(imgui PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(imgui PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(imgui PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(imgui PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(imgui PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET imgui PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(imgui PRIVATE
    glfw3
    "-framework Cocoa"
    "-framework IOKit"
    "-framework OpenGL"
    z
)
target_link_directories(imgui PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/lib
)
target_link_options(imgui PRIVATE
    -stdlib=libc++
)
target_sources(imgui PRIVATE
    vendor/imgui/imgui.cpp
    vendor/imgui/imgui_tables.cpp
    vendor/imgui/imgui_widgets.cpp
    vendor/imgui/imgui_draw.cpp
    vendor/imgui/imgui_demo.cpp
)

# target
add_library(rlImGui STATIC "")
set_target_properties(rlImGui PROPERTIES OUTPUT_NAME "rlImGui")
set_target_properties(rlImGui PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
add_dependencies(rlImGui imgui)
target_include_directories(rlImGui PRIVATE
    vendor/rlImGui
    vendor/imgui
)
target_include_directories(rlImGui INTERFACE
    vendor/rlImGui
)
target_include_directories(rlImGui PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/include
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/include
)
target_compile_definitions(rlImGui PRIVATE
    PLATFORM_DESKTOP
    GL_SILENCE_DEPRECATION
    GLFW_INCLUDE_NONE
)
target_compile_options(rlImGui PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(rlImGui PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(rlImGui PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(rlImGui PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(rlImGui PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(rlImGui PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET rlImGui PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(rlImGui PRIVATE
    raylib
    imgui
    glfw3
    "-framework CoreVideo"
    "-framework CoreGraphics"
    "-framework AppKit"
    "-framework IOKit"
    "-framework CoreFoundation"
    "-framework Foundation"
    "-framework OpenGL"
    "-framework Cocoa"
    z
)
target_link_directories(rlImGui PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/lib
    build/macosx/arm64/release
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/lib
)
target_link_options(rlImGui PRIVATE
    -stdlib=libc++
)
target_sources(rlImGui PRIVATE
    vendor/rlImGui/rlImGui.cpp
)

# target
add_library(serum2d STATIC "")
set_target_properties(serum2d PROPERTIES OUTPUT_NAME "serum2d")
set_target_properties(serum2d PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
target_include_directories(serum2d PRIVATE
    core/include
)
target_include_directories(serum2d INTERFACE
    core/include
)
target_include_directories(serum2d PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/include
    /Users/joshrudnikpersonal/.xmake/packages/e/entt/v3.11.1/192cf6aa1e15466598192670b6af86d1/include
    /Users/joshrudnikpersonal/.xmake/packages/s/spdlog/v1.11.0/209fc800c8e34191a6c0447ff375d83c/include
)
target_compile_definitions(serum2d PRIVATE
    PLATFORM_DESKTOP
    GL_SILENCE_DEPRECATION
)
target_compile_options(serum2d PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(serum2d PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(serum2d PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(serum2d PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(serum2d PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(serum2d PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET serum2d PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(serum2d PRIVATE
    raylib
    "-framework CoreVideo"
    "-framework CoreGraphics"
    "-framework AppKit"
    "-framework IOKit"
    "-framework CoreFoundation"
    "-framework Foundation"
    "-framework OpenGL"
    z
)
target_link_directories(serum2d PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/lib
)
target_link_options(serum2d PRIVATE
    -stdlib=libc++
)
target_sources(serum2d PRIVATE
    core/src/log.cpp
    core/src/scene.cpp
    core/src/entity.cpp
    core/src/window.cpp
)

# target
add_executable(serum2d-editor "")
set_target_properties(serum2d-editor PROPERTIES OUTPUT_NAME "serum2d-editor")
set_target_properties(serum2d-editor PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/macosx/arm64/release")
add_dependencies(serum2d-editor serum2d rlImGui)
target_include_directories(serum2d-editor PRIVATE
    editor/include
    core/include
    vendor/rlImGui
    vendor/imgui
)
target_include_directories(serum2d-editor PRIVATE
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/include
    /Users/joshrudnikpersonal/.xmake/packages/e/entt/v3.11.1/192cf6aa1e15466598192670b6af86d1/include
    /Users/joshrudnikpersonal/.xmake/packages/s/spdlog/v1.11.0/209fc800c8e34191a6c0447ff375d83c/include
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/include
)
target_compile_definitions(serum2d-editor PRIVATE
    PLATFORM_DESKTOP
    GL_SILENCE_DEPRECATION
    GLFW_INCLUDE_NONE
)
target_compile_options(serum2d-editor PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(serum2d-editor PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(serum2d-editor PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(serum2d-editor PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(serum2d-editor PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(serum2d-editor PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET serum2d-editor PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(serum2d-editor PRIVATE
    serum2d
    raylib
    rlImGui
    imgui
    glfw3
    "-framework CoreVideo"
    "-framework CoreGraphics"
    "-framework AppKit"
    "-framework IOKit"
    "-framework CoreFoundation"
    "-framework Foundation"
    "-framework OpenGL"
    "-framework Cocoa"
    z
)
target_link_directories(serum2d-editor PRIVATE
    build/macosx/arm64/release
    /Users/joshrudnikpersonal/.xmake/packages/r/raylib/4.2.0/5a76a8420ef94122bf11c5cc1c6699fb/lib
    /Users/joshrudnikpersonal/.xmake/packages/g/glfw/3.3.8/666df0876e7e4b37acfe633aeea20206/lib
)
target_link_options(serum2d-editor PRIVATE
    -stdlib=libc++
)
target_sources(serum2d-editor PRIVATE
    editor/src/editor.cpp
    editor/src/main.cpp
)

